name: CI/CD with Docker and AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build --exclude-task test

      # --- Docker 관련 추가 단계 ---
      # Docker 이미지 빌드 및 Docker Hub 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/stopnoise-app:latest

      # deploy.yml 파일의 수정된 부분
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3  # 버전 업데이트를 v1.0.4로 고려해보세요.
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: > # '|' 대신 '>'를 사용합니다.
            docker stop stopnoise-container || true && docker rm stopnoise-container || true && docker pull ${{ secrets.DOCKERHUB_USERNAME }}/stopnoise-app:latest && docker run -d --name stopnoise-container -p 8090:8090 -e DB_URL="${{ secrets.DB_URL }}" -e DB_USERNAME="${{ secrets.DB_USERNAME }}" -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}" -e GEMINI_API_KEY="${{ secrets.GEMINI_API_KEY }}" -e S3_ACCESS_KEY="${{ secrets.S3_ACCESS_KEY }}" -e S3_SECRET_KEY="${{ secrets.S3_SECRET_KEY }}" -e HACKERTON_SERVER_IP = "${{secrets.HACKERTON_SERVER_IP}} ${{ secrets.DOCKERHUB_USERNAME }}/stopnoise-app:latest